#include "Kalman.h"

float kalman_filter(kal_filter* k_flt, float input)
{
    /*量测更新，3组方程*/
    k_flt->input = input;
    k_flt->K = (k_flt->Last_prediction_cov) / (k_flt->Last_prediction_cov + k_flt->Measure_noise_cov);
    k_flt->Optimal_output = k_flt->System_state_prediction_matrix + k_flt->K * (k_flt->input - k_flt->System_state_prediction_matrix);
    k_flt->Optimal_cov_matrix = (1 - k_flt->K) * (k_flt->Last_prediction_cov);

    /*时间更新，2组方程*/
    k_flt->System_state_prediction_matrix = k_flt->Optimal_output;
    k_flt->Last_prediction_cov = k_flt->Optimal_cov_matrix + k_flt->Process_noise_cov;

    return k_flt->Optimal_output;
}
